name: security-pipeline

on:
  push:
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  npm-audit-vuln:
    name: npm audit (vuln) — expect FAIL on High
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ./vuln
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci || npm i
      - run: npm audit --omit=dev --audit-level=high

  npm-audit-secure:
    name: npm audit (secure) — expect PASS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./secure
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci || npm i
      - run: npm audit --omit=dev --audit-level=high

  zap-juice-shop:
    name: ZAP Baseline vs Juice Shop — expect FAIL
    runs-on: ubuntu-latest
    services:
      juice:
        image: bkimminich/juice-shop
        ports: ["3000:3000"]
    steps:
      - uses: actions/checkout@v4

      - name: Wait for Juice Shop
        run: |
          for i in {1..60}; do
            curl -fsS http://127.0.0.1:3000 >/dev/null && exit 0
            sleep 2
          done
          echo "Juice Shop never became ready" >&2
          exit 1

      - name: Pull ZAP image
        run: docker pull ghcr.io/zaproxy/zaproxy:stable

      - name: ZAP Baseline (Juice Shop)
        run: |
          docker run --rm --network=host \
            -v "${{ github.workspace }}:/zap/wrk" -w /zap/wrk -u 0:0 \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://127.0.0.1:3000 -m 3 -a \
            -r /zap/wrk/zap-report-juice-shop.html \
            -J /zap/wrk/zap-report-juice-shop.json

      - name: Upload ZAP report (Juice Shop)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report-juice-shop
          path: |
            zap-report-juice-shop.html
            zap-report-juice-shop.json

  zap-secure:
    name: ZAP Baseline vs Secure App — expect PASS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        working-directory: ./secure
        run: npm ci || npm i

      - name: Start secure app (with logs)
        working-directory: ./secure
        run: |
          node -v && npm -v
          nohup node index.js > ../server.log 2>&1 &
          sleep 5
          if ! curl -fsS http://127.0.0.1:4000 >/dev/null; then
            echo "---- secure/server.log (last 100 lines) ----"
            tail -n 100 ../server.log || true
            exit 1
          fi

      - name: Pull ZAP image
        run: docker pull ghcr.io/zaproxy/zaproxy:stable

      - name: ZAP Baseline (Secure)
        run: |
          docker run --rm --network=host \
            -v "${{ github.workspace }}:/zap/wrk" -w /zap/wrk -u 0:0 \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://127.0.0.1:4000 -m 3 -a -I \
            -r /zap/wrk/zap-report-secure.html \
            -J /zap/wrk/zap-report-secure.json

      - name: Upload ZAP report (Secure)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report-secure
          path: |
            zap-report-secure.html
            zap-report-secure.json
